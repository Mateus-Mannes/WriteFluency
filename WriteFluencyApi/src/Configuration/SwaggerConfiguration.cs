using Microsoft.OpenApi.Any;
using Microsoft.OpenApi.Interfaces;
using Microsoft.OpenApi.Models;

namespace WriteFluencyApi.Configuration;

public static class SwaggerConfiguration
{
    public static void AddAppSwagger(this IServiceCollection services) {
        services.AddSwaggerGen(c => {
            // Adds google login option configuration
            c.AddSecurityDefinition("google", new OpenApiSecurityScheme
            {
                Type = SecuritySchemeType.OAuth2,
                Flows = new OpenApiOAuthFlows
                {
                    AuthorizationCode = new OpenApiOAuthFlow
                    {
                        // Url for authorization and getting the authorization code
                        AuthorizationUrl = new Uri("https://accounts.google.com/o/oauth2/auth"),
                        // Url for getting the token after authorization
                        TokenUrl = new Uri("https://oauth2.googleapis.com/token"),
                        // Used scopes
                        Scopes = new Dictionary<string, string>
                        {
                            { "openid", "OpenID" },
                            { "profile", "Profile info" },
                            { "email", "Email address" }
                        }
                    }
                },
                // Extension to define the token name as 'id_token' which is the JWT instead of 'access_token'
                Extensions = new Dictionary<string, IOpenApiExtension>
                {
                    {"x-tokenName", new OpenApiString("id_token")}
                },
            });

            // Jwt api provider configuration
            c.AddSecurityDefinition("jwt_auth", new OpenApiSecurityScheme
            {
                Name = "Authorization",
                Type = SecuritySchemeType.Http,
                Scheme = "bearer",
                BearerFormat = "JWT",
                In = ParameterLocation.Header,
                Description = "Insert the JWT token generated by the API"
            });

            // Enforces swagger to use the google token on the requests
            c.AddSecurityRequirement(new OpenApiSecurityRequirement
            {
                {
                    new OpenApiSecurityScheme
                    {
                        Reference = new OpenApiReference
                        {
                            Type = ReferenceType.SecurityScheme,
                            Id = "google"
                        }
                    },
                    new List<string> { "openid", "profile", "email" }
                },
                {
                    new OpenApiSecurityScheme
                    {
                        Reference = new OpenApiReference
                        {
                            Type = ReferenceType.SecurityScheme,
                            Id = "jwt_auth"
                        }
                    },
                    new List<string>()
                }
            });
        });
    }
}
