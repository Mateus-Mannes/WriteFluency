{
  "$schema": "https://json.schemastore.org/aspire-8.0.json",
  "resources": {
    "wf-minio-password": {
      "type": "parameter.v0",
      "value": "{wf-minio-password.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true
        }
      }
    },
    "wf-minio": {
      "type": "container.v0",
      "connectionString": "Endpoint=http://{wf-minio.bindings.http.host}:{wf-minio.bindings.http.port};AccessKey={user.value};SecretKey={wf-minio-password.value}",
      "image": "docker.io/minio/minio:RELEASE.2025-06-13T11-33-47Z",
      "args": [
        "server",
        "/data",
        "--console-address",
        ":9001"
      ],
      "volumes": [
        {
          "name": "writefluency-minio-data",
          "target": "/data",
          "readOnly": false
        }
      ],
      "env": {
        "MINIO_ROOT_USER": "minioadmin",
        "MINIO_ROOT_PASSWORD": "admin123"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 9000
        },
        "console": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 9001
        }
      }
    },
    "wf-postgres-password": {
      "type": "parameter.v0",
      "value": "{wf-postgres-password.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true
        }
      }
    },
    "wf-postgres": {
      "type": "container.v0",
      "connectionString": "Host={wf-postgres.bindings.tcp.host};Port={wf-postgres.bindings.tcp.port};Username=postgres;Password={wf-postgres-password.value}",
      "image": "docker.io/postgres:14.3",
      "volumes": [
        {
          "name": "writefluency-postgres-data",
          "target": "/var/lib/postgresql/data",
          "readOnly": false
        }
      ],
      "env": {
        "POSTGRES_HOST_AUTH_METHOD": "scram-sha-256",
        "POSTGRES_INITDB_ARGS": "--auth-host=scram-sha-256 --auth-local=scram-sha-256",
        "POSTGRES_USER": "postgres",
        "POSTGRES_PASSWORD": "{wf-postgres-password.value}"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 5432
        }
      }
    },
    "wf-postgresdb": {
      "type": "value.v0",
      "connectionString": "{wf-postgres.connectionString};Database=wf-postgresdb"
    },
    "wf-db-migrator": {
      "type": "project.v0",
      "path": "../../propositions-service/WriteFluency.DbMigrator/WriteFluency.DbMigrator.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ConnectionStrings__wf-postgresdb": "{wf-postgresdb.connectionString}",
        "RESOURCE_NAME": "wf-db-migrator"
      }
    },
    "wf-api": {
      "type": "project.v0",
      "path": "../../propositions-service/WriteFluency.WebApi/WriteFluency.WebApi.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "HTTP_PORTS": "{wf-api.bindings.http.targetPort}",
        "ConnectionStrings__wf-postgresdb": "{wf-postgresdb.connectionString}",
        "ConnectionStrings__wf-minio": "{wf-minio.connectionString}",
        "RESOURCE_NAME": "wf-api"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "wf-news-worker": {
      "type": "project.v0",
      "path": "../../propositions-service/WriteFluency.NewsWorker/WriteFluency.NewsWorker.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "HTTPS_PORTS": "{wf-news-worker.bindings.https.targetPort}",
        "ConnectionStrings__wf-postgresdb": "{wf-postgresdb.connectionString}",
        "ConnectionStrings__wf-minio": "{wf-minio.connectionString}",
        "RESOURCE_NAME": "wf-news-worker"
      },
      "bindings": {
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "wf-webapp": {
      "type": "container.v1",
      "build": {
        "context": "../../webapp",
        "dockerfile": "../../webapp/Dockerfile"
      },
      "env": {
        "NODE_ENV": "development",
        "services__wf-api__http__0": "{wf-api.bindings.http.url}",
        "services__wf-api__https__0": "{wf-api.bindings.https.url}",
        "PORT": "{wf-webapp.bindings.http.targetPort}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 4200,
          "external": true
        }
      }
    }
  }
}